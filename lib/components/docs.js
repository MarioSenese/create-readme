// Generated by CoffeeScript 1.10.0
(function() {
  var DocsParser, Promise, fs, path, winston;

  winston = require('winston');

  Promise = require('bluebird');

  fs = Promise.promisifyAll(require('fs'));

  path = require('path');

  module.exports = DocsParser = (function() {
    DocsParser.name = "DocsParser";

    function DocsParser(options) {
      var base, base1, base2, ref, ref1;
      this.options = options;
      if (this.options == null) {
        this.options = {};
      }
      if ((base = this.options).encoding == null) {
        base.encoding = 'utf-8';
      }
      if ((base1 = this.options).branch == null) {
        base1.branch = (ref = (ref1 = this.options.git) != null ? ref1.branch : void 0) != null ? ref : 'master';
      }
      if ((base2 = this.options).docFile == null) {
        base2.docFile = 'index.html';
      }
    }

    DocsParser.prototype.run = function(pkg) {
      var docDir, docFile, ref, ref1;
      winston.info("Creating documentation info");
      if (pkg.git == null) {
        return Promise.resolve(null);
      }
      docDir = (ref = (ref1 = pkg.directories) != null ? ref1.doc : void 0) != null ? ref : './doc/';
      docFile = path.join(docDir, this.options.docFile);
      winston.debug(" Looking for doc file at " + docFile);
      return fs.statAsync(docFile).then(function(stats) {
        if (stats.isFile()) {
          winston.debug(" File found, adding rawgit link");
          return "https://rawgit.com/" + pkg.git.user + "/" + pkg.git.repo + "/" + pkg.git.branch + "/" + docFile.split(path.sep).join("/");
        } else {
          return null;
        }
      })["catch"]({
        code: 'ENOENT'
      }, function() {
        return null;
      });
    };

    return DocsParser;

  })();

}).call(this);
